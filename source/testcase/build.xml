<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="DBX Test Cases" default="build" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>

	<fail unless="program" message="missing 'program' property. Example: ant -Dprogram=..\..\project\win32\debug\dbxfbTests.exe -Ddrivers=Y:\firebird" />
	<fail unless="drivers" message="missing 'drivers' property. Example: ant -Dprogram=..\..\project\win32\debug\dbxfbTests.exe -Ddrivers=Y:\firebird" />

    <property environment="env"/>
	<property name="program.conf" location="dbxfbTests.ini" />
    <property name="embedded.count" value="55" />
    <property name="server.count" value="18" />

	<target name="build" depends="suite_1,suite_2,suite_3" />

    <target name="suite_1" depends="getTestCases">
        <for param="e" list="false,true" parallel="false" keepgoing="true">
            <sequential>
                <for param="i" list="${TestCases}" parallel="true" keepgoing="true" threadCount="${env.NUMBER_OF_PROCESSORS}">
                    <sequential>
                        <antcall target="dbx.test">
                            <param name="suite" value="1" />
                            <param name="test" value="@{i}" />
                            <param name="execute_fb_310_402" value="@{e}" />
                        </antcall>
                    </sequential>
                </for>
            </sequential>
        </for>
    </target>

    <target name="suite_2" depends="getTestCases">
        <!-- Use Firebird 5 and above to avoid error: Shared memory area is probably already created by another engine instance in another Windows session -->
        <for param="i" list="${TestCases}" parallel="true" keepgoing="true" threadCount="${env.NUMBER_OF_PROCESSORS}">
			<sequential>
				<antcall target="dbx.test">
					<param name="suite" value="2" />
					<param name="test" value="@{i}" />
                    <param name="execute_fb_310_402" value="true" />
				</antcall>
			</sequential>
		</for>
    </target>

    <target name="suite_3">
		<antcall target="dbx.test">
			<param name="test" value="default" />
			<param name="suite" value="3" />
		</antcall>
    </target>

    <target name="getTestCases">
        <var name="TestCases" value="default"/>

        <for param="i" begin="1" end="${embedded.count}">
            <sequential>
                <var name="TestCases" value="${TestCases},embedded_@{i}"/>
            </sequential>
        </for>

        <for param="i" begin="1" end="${server.count}">
            <sequential>
                <var name="TestCases" value="${TestCases},server_@{i}"/>
            </sequential>
        </for>
    </target>

	<target name="dbx.test" depends="commit#d0e33f1" if="p.execute">
        <tempfile property="p.script" destdir="${env.TEMP}" suffix=".cmd"/>

		<condition property="p.suite" value="-suite ${suite}" else="">
			<isset property="suite" />
		</condition>

		<echo file="${p.script}">
			${program} -config ${program.conf} -drivers ${drivers} -test ${test} ${p.suite} -console
		</echo>

		<exec executable="cmd" spawn="false" failonerror="true">
			<arg line="/c ${p.script}" />
		</exec>

		<delete file="${p.script}" />
	</target>

    <target name="commit#d0e33f1" description="https://github.com/FirebirdSQL/firebird/issues/7347 commit d0e33f1: Use Windows private namespace for kernel objects used in server-to-server IPC">
        <condition property="p.execute">
            <xor>
                <isfalse value="${execute_fb_310_402}" />
                <or>
                    <equals arg1="${test}" arg2="embedded_41" />  <!-- Firebird 3.0.10 -->
                    <equals arg1="${test}" arg2="embedded_42" />  <!-- Firebird 3.0.11 -->
                    <equals arg1="${test}" arg2="embedded_43" />  <!-- Firebird 3.0.12 -->
                    <equals arg1="${test}" arg2="embedded_44" />  <!-- Firebird 3.0.13 -->
                    <equals arg1="${test}" arg2="embedded_45" />  <!-- Firebird 4.0.0 -->
                    <equals arg1="${test}" arg2="embedded_46" />  <!-- Firebird 4.0.1 -->
                    <equals arg1="${test}" arg2="embedded_47" />  <!-- Firebird 4.0.2 -->
                </or>
            </xor>
        </condition>
    </target>

</project>
